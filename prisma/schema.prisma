generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}


model profiles {
  id                      String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id                 String    @unique @db.Uuid
  updated_at              DateTime  @default(now()) @db.Timestamptz(6)
  fiscal_year_start_date  DateTime? @db.Date
  first_sprint_start_date DateTime? @db.Date
  sprint_length_days      Int?
  jira_base_url           String?
  jira_user_email         String?
  jira_api_token          String?
}


model tasks {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String   @db.Uuid
  updated_at     DateTime @default(now()) @db.Timestamptz(6)
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  title          String
  body           String?
  due_date_type  String?
  due_date_value String?
  status         String
  source         String? @unique
  source_last_synced_at DateTime? @db.Timestamptz(6)
  priority       String
}

model jira_jql_queries {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String   @db.Uuid
  updated_at     DateTime @default(now()) @db.Timestamptz(6)
  created_at     DateTime @default(now()) @db.Timestamptz(6)
  label          String
  label_color    String?
  jql            String
  enabled        Boolean  @default(true)
}

model hidden_jira_issues {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id        String   @db.Uuid
  issue_key      String
}

